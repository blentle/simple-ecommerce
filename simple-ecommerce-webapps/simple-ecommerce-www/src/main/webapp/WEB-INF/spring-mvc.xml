<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

    <!-- 自动扫描且只扫描@Controller -->
    <context:component-scan base-package="top.melody.unicall.webapps.www.controller" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>

    <mvc:annotation-driven content-negotiation-manager="contentNegotiationManager">
        <mvc:message-converters register-defaults="true">
            <!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8" />
            </bean>
            <!-- 将Jackson2HttpMessageConverter的默认格式化输出设为true -->
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="prettyPrint" value="true"/>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!--the webapi oauth interceptor-->
    <mvc:interceptors>
        <mvc:interceptor>
            <!--<mvc:mapping path="/**"/>-->
            <mvc:mapping path="/trolley/commit/**"/>
            <mvc:mapping path="/trolley/buynow/**"/>
            <mvc:exclude-mapping path="/register/**"/>
            <mvc:exclude-mapping path="/login/**"/>
            <mvc:exclude-mapping path="/verify/**"/>
            <bean id="OAuthInterceptor" class="top.melody.unicall.webapps.www.interceptor.OAuthInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <!-- the header menu interceptor adapter -->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/"/>
            <mvc:mapping path="/index"/>
            <bean id="IndexMenuInterceptorAdapter" class="top.melody.unicall.webapps.www.interceptor.MenuInterceptorAdapter">
                <property name="flag" value="index"/>
            </bean>
        </mvc:interceptor>
    </mvc:interceptors>

    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/about"/>
            <mvc:mapping path="/user/register"/>
            <mvc:mapping path="/user/login"/>
            <bean id="AboutMenuInterceptorAdapter" class="top.melody.unicall.webapps.www.interceptor.MenuInterceptorAdapter">
                <property name="flag" value="about"/>
            </bean>
        </mvc:interceptor>
    </mvc:interceptors>

    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/service"/>
            <mvc:mapping path="/service/**"/>
            <bean id="ServiceMenuInterceptorAdapter" class="top.melody.unicall.webapps.www.interceptor.MenuInterceptorAdapter">
                <property name="flag" value="service"/>
            </bean>
        </mvc:interceptor>
    </mvc:interceptors>

    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/operator"/>
            <mvc:mapping path="/operator/**"/>
            <bean id="OperatorMenuInterceptorAdapter" class="top.melody.unicall.webapps.www.interceptor.MenuInterceptorAdapter">
                <property name="flag" value="operator"/>
            </bean>
        </mvc:interceptor>
    </mvc:interceptors>

    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/partner"/>
            <mvc:mapping path="/partner/**"/>
            <bean id="PartnerMenuInterceptorAdapter" class="top.melody.unicall.webapps.www.interceptor.MenuInterceptorAdapter">
                <property name="flag" value="partner"/>
            </bean>
        </mvc:interceptor>
    </mvc:interceptors>

    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/contact"/>
            <bean id="ContactMenuInterceptorAdapter" class="top.melody.unicall.webapps.www.interceptor.MenuInterceptorAdapter">
                <property name="flag" value="contact"/>
            </bean>
        </mvc:interceptor>
    </mvc:interceptors>

    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/help"/>
            <mvc:mapping path="/help/**"/>
            <bean id="BlankMenuInterceptorAdapter" class="top.melody.unicall.webapps.www.interceptor.MenuInterceptorAdapter">
                <property name="flag" value=""/>
            </bean>
        </mvc:interceptor>
    </mvc:interceptors>
    <!-- the header menu interceptor adapter -->

    <!-- REST中根据URL后缀自动判定Content-Type及相应的View -->
    <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="ignoreAcceptHeader" value="true" />
        <property name="defaultContentType" value="application/json" />
        <property name="mediaTypes" >
            <value>
                json=application/json
                xml=application/xml
            </value>
        </property>
    </bean>

    <!-- 定义JSP文件的位置 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 容器默认的DefaultServletHandler处理 所有静态内容与无RequestMapping处理的URL-->
    <mvc:default-servlet-handler/>

    <!-- 定义无需Controller的url<->view直接映射 -->
    <!--left menu-->
    <mvc:view-controller path="/static" view-name="/static"/>
    <!-- 将Controller抛出的异常转到特定View, 保持SiteMesh的装饰效果 -->
    <!--<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">-->
        <!--<property name="exceptionMappings">-->
            <!--<props>-->
                <!--<prop key="org.apache.shiro.authz.UnauthorizedException">error/403</prop>-->
                <!--<prop key="java.lang.Throwable">error/500</prop>-->
            <!--</props>-->
        <!--</property>-->
    <!--</bean>-->

    <!-- 支持 Shiro对Controller的方法级AOP安全控制  begin-->
    <!--<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">-->
    <!--<property name="proxyTargetClass" value="true" />-->
    <!--</bean>-->

    <!--<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">-->
    <!--<property name="securityManager" ref="securityManager"/>-->
    <!--</bean>-->
    <!-- end -->
</beans>
